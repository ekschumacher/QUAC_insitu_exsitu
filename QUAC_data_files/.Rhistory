(38000/52)/37.5
((38000/52)/37.5)*1.24
(((38000/52)/37.5)*1.24)*4
library(hierfstat)
hierfstat
?hierfstat
setwd("C:\\Users\\eschumacher\\Documents")
nanodrop_values <- read.csv("nandrop_shz_17_60.csv")
setwd("C:\\Users\\eschumacher\\Documents")
setwd("C:/Users/eschumacher/Documents")
setwd("C:\\Users\\eschumacher\\Documents\\primer_ordering_ZAIN")
setwd("C:\\Users\\eschumacher\\Documents")
read.csv("nanodrop_shz_17_60.csv")
nanodrop_values <- read.csv("nanodrop_shz_17_60.csv")
##set my working directory to my documents folder
setwd("C:\\Users\\eschumacher\\Documents")
##
nanodrop_values <- read.csv("nanodrop_shz_17_60.csv")
?t.test
t.test(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, paired = TRUE)
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop)
##now we run the t-test
t.test(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, paired = TRUE)
##
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop)
##
pdf("badblank_nanodrop.pdf")
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop)
dev.off()
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, ylim = c(-10, 10))
##
pdf("badblank_nanodrop.pdf")
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, ylim = c(-10, 10),
names = c("Before New Blank", "After New Blank"))
##
pdf("badblank_nanodrop.pdf")
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, ylim = c(-10, 10),
names = c("Before New Blank", "After New Blank"))
dev.off()
##
pdf("badblank_nanodrop.pdf")
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, ylim = c(-10, 10),
names = c("Before New Blank", "After New Blank"), title = "260/230 ratio comparisons before and after new blank")
dev.off()
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, ylim = c(-10, 10),
names = c("Before New Blank", "After New Blank"), ylab = c("260/230 Ratios"),
main = c("260/230 ratios before and after new blank"))
##
pdf("badblank_nanodrop.pdf")
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, ylim = c(-10, 10),
names = c("Before New Blank", "After New Blank"), ylab = c("260/230 Ratios"),
main = c("260/230 ratios before and after new blank"))
dev.off()
##
pdf("badblank_nanodrop.pdf")
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, ylim = c(-10, 10),
names = c("Before New Blank", "After New Blank"), ylab = c("260/230 Ratios"),
main = c("260/230 ratios before and after new blank"))
dev.off()
##set my working directory to my documents folder
setwd("C:\\Users\\eschumacher\\Documents")
##load in nanodrop values
nanodrop_values <- read.csv("nanodrop_shz_17_60.csv")
##non-parametrc
wilcox.test(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, paired = TRUE, alternative = "two.sided")
sum(134
83.8
48.2
21.2)
sum(134, 83.8, 48.2, 21.2)
library(adegenet)
library(poppr)
library(hierfstat)
library(PopGenReport)
library(pegas)
?pair.ia
library(adegenet)
##
QUAC_div <- read.genepop("C:\\Users\\eschumacher\\Documents\\GitHub\\QUAC_diversity\\QUAC_data_files\\QUAC_genind\\garden_wild\\QUAC_garden_clean.gen", ncode = 3)
QUAC_div
QUAC_div@tab
QUAC_div@loc.fac
QUAC_div
QUAC_div@loc.n.all
summary(QUAC_div)
library(hierfstat)
allelic.richness(QUAC_div)
sum(as.numeric(QUAC_div@loc.n.all))
as.numeric(QUAC_div@loc.n.all)[1]
21/175
length(QUAC_div@loc.n.all)
allelic.richness(QUAC_div)
colMeans(allelic.richness(QUAC_div)$Ar)
library(adegenet)
library(hierfstat)
library(geosphere)
#####################################
############ Directories ############
#####################################
##set directory to all butternut files
QUAC_data_files <- "C:\\Users\\eschumacher\\Documents\\GitHub\\QUAC_diversity\\QUAC_data_files"
QUAC_analysis_results <- "C:\\Users\\eschumacher\\Documents\\GitHub\\QUAC_diversity\\QUAC_analyses\\Results"
################################
########## Load files ##########
################################
setwd(QUAC_data_files)
QUAC_wild_gen <- read.genepop(paste0(QUAC_data_files, "\\QUAC_genind\\QUAC_wild.gen"), ncode = 3)
###rename individuals
rownames(QUAC_wild_gen@tab) <- QUAC_wild_df$Ind
###create population name list
QUAC_pop_list <- unique(QUAC_wild_df$Pop)
###rename individuals
rownames(QUAC_wild_gen@tab) <- QUAC_wild_df$Ind
##name populations
levels(QUAC_wild_gen@pop) <- c("Porter", "Magazine", "Pryor", "Sugar Loaf", "Kessler")
################################
########## Load files ##########
################################
setwd(QUAC_data_files)
QUAC_wild_gen <- read.genepop(paste0(QUAC_data_files, "\\QUAC_genind\\QUAC_wild.gen"), ncode = 3)
QUAC_wild_df <- read.csv(paste0(QUAC_data_files, "\\QUAC_data_frames\\QUAC_wild_df.csv"))
###create population name list
QUAC_pop_list <- unique(QUAC_wild_df$Pop)
###rename individuals
rownames(QUAC_wild_gen@tab) <- QUAC_wild_df$Ind
##name populations
levels(QUAC_wild_gen@pop) <- c("Porter", "Magazine", "Pryor", "Sugar Loaf", "Kessler")
QUAC_wild_df <- read.csv(paste0(QUAC_data_files, "\\QUAC_data_frames\\garden_wild\\QUAC_wild_df.csv"))
###create population name list
QUAC_pop_list <- unique(QUAC_wild_df$Pop)
###rename individuals
rownames(QUAC_wild_gen@tab) <- QUAC_wild_df$Ind
##name populations
levels(QUAC_wild_gen@pop) <- c("Porter", "Magazine", "Pryor", "Sugar Loaf", "Kessler")
###test IBD
QUAC_gen_dist <- dist.genpop(QUAC_wild_gen)
###test IBD
#convert to genpop
QUAC_wild_genpop <- genind2genpop(QUAC_wild_gen)
QUAC_gen_dist <- dist.genpop(QUAC_wild_gen)
QUAC_gen_dist <- dist.genpop(QUAC_wild_genpop)
data(nancycats)
nancycats$other$xy
dist(nancycats$other$xy)
##calculate geographic distances between mean locations
QUAC_dist <- matrix(nrow = length(QUAC_pop_list), ncol = length(QUAC_pop_list))
for(first in 1:length(QUAC_pop_list)){
for(second in 1:length(QUAC_pop_list)){
QUAC_dist[first,second] <-  distm(QUAC_coords[first,], QUAC_coords[second,], fun = distGeo)/1000
}
}
QUAC_dist
##################################
####### Geographic Analyses ######
##################################
##Calculate mean longitude and latitude for each population
#first create matrices
QUAC_mean_lon <- matrix()
QUAC_mean_lat <- matrix()
for(pop in QUAC_pop_list){
QUAC_mean_lon[pop] <- mean(QUAC_wild_df[QUAC_wild_df$Pop == pop,][,3])
}
for(pop in QUAC_pop_list){
QUAC_mean_lat[pop] <- mean(QUAC_wild_df[QUAC_wild_df$Pop == pop,][,4])
}
##convert to matrix
QUAC_mean_lon <- matrix(QUAC_mean_lon)
QUAC_mean_lat <- matrix(QUAC_mean_lat)
##document cleanup
QUAC_mean_lon <- QUAC_mean_lon[-1]
QUAC_mean_lat <- QUAC_mean_lat[-1]
#combine into one document for mean long and lat for each pop
QUAC_coords <- matrix(ncol = 2, nrow = length(QUAC_pop_list))
QUAC_coords[,1] <- QUAC_mean_lon
QUAC_coords[,2] <- QUAC_mean_lat
rownames(QUAC_coords) <- c("Porter", "Magazine", "Pryor", "Sugar Loaf", "Kessler")
colnames(QUAC_coords) <- c("Mean Lon", "Mean Lat")
##calculate geographic distances between mean locations
QUAC_dist <- matrix(nrow = length(QUAC_pop_list), ncol = length(QUAC_pop_list))
for(first in 1:length(QUAC_pop_list)){
for(second in 1:length(QUAC_pop_list)){
QUAC_dist[first,second] <-  distm(QUAC_coords[first,], QUAC_coords[second,], fun = distGeo)/1000
}
}
QUAC_dist
##replacce NAs with zeroes
QUAC_dist[is.na(QUAC_dist)] <- 0
QUAC_dist
QUAC_geo_dist <- QUAC_dist[lower.tri(QUAC_dist)]
QUAC_geo_dist
ibd <- mantel.randtest(QUAC_gen_dist, QUAC_geo_dist)
dist(QUAC_coords[,1], QUAC_coords[,2])
QUAC_coords
?dist
nancycats$other$xy
QUAC_dist
dist(QUAC_dist)
dist(QUAC_coords)
QUAC_geo_dist <- dist(QUAC_coords)
ibd <- mantel.randtest(QUAC_gen_dist, QUAC_geo_dist)
ibd
plot(ibd)
####
plot(QUAC_gen_dist~QUAC_geo_dist)
abline(lm(QUAC_gen_dist~QUAC_geo_dist), col="red",lty=2)
lm(QUAC_gen_dist~QUAC_geo_dist)
as.numeric(QUAC_gen_dist)
as.numeric(QUAC_geo_dist)
abline(lm(as.numeric(QUAC_gen_dist)~as.numeric(QUAC_geo_dist)), col="red",lty=2)
QUAC_gen_dist_lm <- lm(as.numeric(QUAC_gen_dist)
QUAC_gen_dist_lm_sum <- summary(QUAC_gen_dist_lm)
QUAC_gen_dist_lm <- lm(as.numeric(QUAC_gen_dist))
QUAC_gen_dist_lm_sum <- summary(QUAC_gen_dist_lm)
QUAC_gen_dist_lm <- lm(as.numeric(QUAC_gen_dist)~as.numeric(QUAC_geo_dist))
QUAC_gen_dist_lm_sum <- summary(QUAC_gen_dist_lm)
QUAC_gen_dist_lm_sum
