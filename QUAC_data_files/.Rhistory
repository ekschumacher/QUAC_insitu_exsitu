library(diveRsity)
library(adegenet)
library(poppr)
library(Demerelate)
#########################
#   Load Data Files     #
#########################
#set working directory to load in data files
setwd("../../QUAC_data_files")
##now read in genepop file as a genind for adegenet
QUAC_gen <- read.genepop("QUAC_adegenet_files/QUAC_allpop.gen", ncode = 3)
##load relatedness data frame for relatedness analysis
QUAC_df <- read.csv("QUAC_data_frames/QUAC_allpop.csv")
QUAC_df <- QUAC_df[,-1]
##rename individuals in the genind object
rownames(QUAC_gen@tab) <- QUAC_df[,1]
#load in relatedness function
source("../QUAC_analyses/RScripts/relatedness_analyses.R")
############################################################
#    Remove Clones and Individuals with Missing Data       #
############################################################
##clone check
#convert to genelcone object
QUAC_geneclone <- as.genclone(QUAC_gen)
#identify multi-locus genotypes (non-clones)
QUAC_gen_id <- mlg.id(QUAC_geneclone)
#function to pull out all clones into a list
QUAC_clone_index <- which(sapply(QUAC_gen_id, function(x) length(x)>1))
#create a list of ID with clones
clones_ID <- list()
for(clones in 1:length(QUAC_clone_index)) clones_ID[[clones]] <- QUAC_gen_id[[QUAC_clone_index[[clones]]]]
#now remove clones from the matrix
QUAC_noclones <- clonecorrect(QUAC_geneclone)
#convert back to a genind object
QUAC_genind_nocl <- genclone2genind(QUAC_noclones) ##left with 456 individuals, there were 7 clones
##remove individuals with too much missing data
QUAC_genind_nomd <- missingno(QUAC_genind_nocl, type = "geno", cutoff = 0.25, quiet = FALSE, freq = FALSE) ##there were 7 individuals with too much missing data, left with 449 individuals
##remove the individuals from the relatedness df that have been removed for missing data and clones
QUAC_clean_df <- QUAC_df[QUAC_df[,1] %in% rownames(QUAC_genind_nomd@tab),]
View(QUAC_clean_df)
View(QUAC_clean_df)
View(QUAC_df)
QUAC_df <- QUAC_df[,-1]
View(QUAC_df)
##now read in genepop file as a genind for adegenet
QUAC_gen <- read.genepop("QUAC_adegenet_files/QUAC_allpop.gen", ncode = 3)
#########################
#   Load Data Files     #
#########################
#set working directory to load in data files
setwd("../../QUAC_data_files")
##now read in genepop file as a genind for adegenet
QUAC_gen <- read.genepop("QUAC_adegenet_files/QUAC_allpop.gen", ncode = 3)
##load relatedness data frame for relatedness analysis
QUAC_df <- read.csv("QUAC_data_frames/QUAC_allpop.csv")
QUAC_df <- QUAC_df[,-1]
View(QUAC_genind_nocl)
##load relatedness data frame for relatedness analysis
QUAC_df <- read.csv("QUAC_data_frames/QUAC_allpop.csv")
View(QUAC_df)
#now read in genepop file as a genind for adegenet
QUAC_gen <- read.genepop("QUAC_adegenet_files/QUAC_allpop.gen", ncode = 3)
#load relatedness data frame for relatedness analysis
QUAC_df <- read.csv("QUAC_data_frames/QUAC_allpop.csv")
head(QUAC_df[,1])
##rename individuals in the genind object
rownames(QUAC_gen@tab) <- QUAC_df[,1]
#load in relatedness function
source("../QUAC_analyses/RScripts/relatedness_analyses.R")
############################################################
#    Remove Clones and Individuals with Missing Data       #
############################################################
setwd("..")
##clone check
#convert to genelcone object
QUAC_geneclone <- as.genclone(QUAC_gen)
#identify multi-locus genotypes (non-clones)
QUAC_gen_id <- mlg.id(QUAC_geneclone)
#function to pull out all clones into a list
QUAC_clone_index <- which(sapply(QUAC_gen_id, function(x) length(x)>1))
#create a list of ID with clones
clones_ID <- list()
for(clones in 1:length(QUAC_clone_index)) clones_ID[[clones]] <- QUAC_gen_id[[QUAC_clone_index[[clones]]]]
#now remove clones from the matrix
QUAC_noclones <- clonecorrect(QUAC_geneclone)
#convert back to a genind object
QUAC_genind_nocl <- genclone2genind(QUAC_noclones) ##left with 456 individuals, there were 7 clones
##remove individuals with too much missing data
QUAC_genind_nomd <- missingno(QUAC_genind_nocl, type = "geno", cutoff = 0.25, quiet = FALSE, freq = FALSE) ##there were 7 individuals with too much missing data, left with 449 individuals
##remove the individuals from the relatedness df that have been removed for missing data and clones
QUAC_clean_df <- QUAC_df[QUAC_df[,1] %in% rownames(QUAC_genind_nomd@tab),]
##rename individuals in the genind object
rownames(QUAC_gen@tab) <- QUAC_df[,1]
QUAC_gen
#load relatedness data frame for relatedness analysis
QUAC_df <- read.csv("QUAC_data_frames/QUAC_allpop.csv")
##rename individuals in the genind object
rownames(QUAC_gen@tab) <- QUAC_df[,1]
head(rownames(QUAC_gen@tab) )
#load in relatedness function
source("../QUAC_analyses/RScripts/relatedness_analyses.R")
############################################################
#    Remove Clones and Individuals with Missing Data       #
############################################################
setwd("..")
##clone check
#convert to genelcone object
QUAC_geneclone <- as.genclone(QUAC_gen)
#identify multi-locus genotypes (non-clones)
QUAC_gen_id <- mlg.id(QUAC_geneclone)
#function to pull out all clones into a list
QUAC_clone_index <- which(sapply(QUAC_gen_id, function(x) length(x)>1))
#create a list of ID with clones
clones_ID <- list()
for(clones in 1:length(QUAC_clone_index)) clones_ID[[clones]] <- QUAC_gen_id[[QUAC_clone_index[[clones]]]]
#now remove clones from the matrix
QUAC_noclones <- clonecorrect(QUAC_geneclone)
#convert back to a genind object
QUAC_genind_nocl <- genclone2genind(QUAC_noclones) ##left with 456 individuals, there were 7 clones
QUAC_genind_nocl
##remove individuals with too much missing data
QUAC_genind_nomd <- missingno(QUAC_genind_nocl, type = "geno", cutoff = 0.25, quiet = FALSE, freq = FALSE) ##there were 7 individuals with too much missing data, left with 449 individuals
##remove the individuals from the relatedness df that have been removed for missing data and clones
QUAC_clean_df <- QUAC_df[QUAC_df[,1] %in% rownames(QUAC_genind_nomd@tab),]
rownames(QUAC_genind_nomd@tab)
QUAC_df[,1]
View(QUAC_clean_df)
View(QUAC_df)
QUAC_genind_nomd
#load relatedness data frame for relatedness analysis
QUAC_df <- read.csv("QUAC_data_frames/QUAC_allpop.csv")
##remove the individuals from the relatedness df that have been removed for missing data and clones
QUAC_clean_df <- QUAC_df[QUAC_df[,1] %in% rownames(QUAC_genind_nomd@tab),]
View(QUAC_clean_df)
##running relatedness analyses on different individual sets
#getting rid of pop - just wild and garden, but as one data file
QUAC_relate_red_df <- halfsib_relatedness_reduction_loiselle(QUAC_clean_df[,-2])
#how many garden and wild individuals
QUAC_relate_red_comp_df <- matrix(nrow = 4, ncol = 1)
#
QUAC_relate_red_comp_df[1,] <- length(QUAC_relate_red_df[QUAC_relate_red_df$Garden_Wild == "Garden",])
QUAC_relate_red_comp_df[2,] <- length(QUAC_relate_red_df[QUAC_relate_red_df$Garden_Wild == "Wild",])
View(QUAC_relate_red_comp_df)
View(QUAC_relate_red_comp_df)
View(QUAC_relate_red_df)
QUAC_relate_red_df[QUAC_relate_red_df$Garden_Wild == "Garden",]
QUAC_relate_red_df[QUAC_relate_red_df$Garden_Wild == "Garden",][,1]
length(QUAC_relate_red_df[QUAC_relate_red_df$Garden_Wild == "Garden",][,1])
#
QUAC_relate_red_comp_df[1,] <- length(QUAC_relate_red_df[QUAC_relate_red_df$Garden_Wild == "Garden",][,1])
QUAC_relate_red_comp_df[2,] <- length(QUAC_relate_red_df[QUAC_relate_red_df$Garden_Wild == "Wild",][,1])
#run the relate code with separate wild and garden with all pop
QUAC_relate_red_allpop_df <- halfsib_relatedness_reduction_loiselle(QUAC_clean_df[,-2])
View(QUAC_clean_df)
#run the relate code with separate wild and garden with all pop
QUAC_relate_red_allpop_df <- halfsib_relatedness_reduction_loiselle(QUAC_clean_df[,-3])
View(QUAC_clean_df)
QUAC_relate_red_comp_df[3,] <- length(QUAC_relate_red_allpop_df[QUAC_relate_red_allpop_df$Garden_Wild == "Garden",][,1])
QUAC_relate_red_comp_df[4,] <- length(QUAC_relate_red_allpop_df[QUAC_relate_red_allpop_df$Garden_Wild == "Wild",][,1])
View(QUAC_relate_red_allpop_df)
##botanic garden individual names
QUAC_garden_df <- QUAC_clean_df[QUAC_clean_df$Garden_Wild == 'Garden',]
QUAC_wild_df <- QUAC_clean_df[QUAC_clean_df$Garden_Wild == 'Wild',]
#add wild/garden to the relate red comp df
QUAC_relate_red_comp_garden_df <- QUAC_garden_df[QUAC_garden_df$Ind %in% QUAC_relate_red_allpop_df$Ind,]
QUAC_relate_red_comp_wild_df <- QUAC_wild_df[QUAC_wild_df$Ind %in% QUAC_relate_red_allpop_df$Ind,]
#now run wild and garden individuals separately - reference population is only botanic garden or wild
QUAC_relate_red_garden_sep_df <- halfsib_relatedness_reduction_loiselle(QUAC_garden_df[,-2])
View(QUAC_relate_red_garden_sep_df)
QUAC_relate_red_wild_sep_df <- halfsib_relatedness_reduction_loiselle(QUAC_wild_df[,-2])
#now run with the reference pop as "all pops"
QUAC_relate_red_garden_allpop_df <- halfsib_relatedness_reduction_loiselle(QUAC_garden_df[,-3])
QUAC_relate_red_wild_allpop_df <- halfsib_relatedness_reduction_loiselle(QUAC_wild_df[,-3])
head(QUAC_relate_red_garden_allpop_df)
length(QUAC_relate_red_garden_allpop_df[,1])
length(QUAC_relate_red_wild_allpop_df[,1])
