QUAC_df <- read.csv(paste0("QUAC_data_frames/Relate_Red/", QUAC_PCA_df[[pops]]))
#name rows in the genind object
rownames(QUAC_gen@tab) <- QUAC_df[,1]
#name pops
levels(QUAC_gen@pop) <- unique(QUAC_df$Pop)
#create tab object for genind
QUAC_tab <- tab(QUAC_gen, freq=TRUE, NA.method="mean")
#run PCA
QUAC_PCA[[pops]] <- dudi.pca(QUAC_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
QUAC_PCA_df_temp <- data.frame(cbind(as.numeric(QUAC_PCA[[pops]]$li$Axis1),
as.numeric(QUAC_PCA[[pops]]$li$Axis2),
QUAC_df$Pop))
colnames(QUAC_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
QUAC_pc1 <- signif(((QUAC_PCA[[pops]]$eig[1])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
QUAC_pc2 <- signif(((QUAC_PCA[[pops]]$eig[2])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
##plot PCA
#write pdf file
pdf("PCA.pdf",width = 10, height = 8)
#plot in ggplot
PCA <- ggplot(QUAC_PCA_df_temp, aes(x = as.numeric(Axis1), y = as.numeric(Axis2), color = Pop)) + geom_point()
dev.off()
}
#loop to run PCA analysis on different population sets
for(pops in 1:length(QUAC_PCA_gen)){
#comment in if you need to convert .arp files to genepop files
#arp2gen(paste0("QUAC_adegenet_files/Relate_Red/", QUAC_PCA_gen[[pops]]))
#read in genepop files as a genind object
QUAC_gen <- read.genepop(paste0("QUAC_adegenet_files/Relate_Red/",gsub("\\..*","",QUAC_PCA_gen[[pops]]), ".gen"), ncode = 3)
#load in data frames
QUAC_df <- read.csv(paste0("QUAC_data_frames/Relate_Red/", QUAC_PCA_df[[pops]]))
#name rows in the genind object
rownames(QUAC_gen@tab) <- QUAC_df[,1]
#name pops
levels(QUAC_gen@pop) <- unique(QUAC_df$Pop)
#create tab object for genind
QUAC_tab <- tab(QUAC_gen, freq=TRUE, NA.method="mean")
#run PCA
QUAC_PCA[[pops]] <- dudi.pca(QUAC_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
QUAC_PCA_df_temp <- data.frame(cbind(as.numeric(QUAC_PCA[[pops]]$li$Axis1),
as.numeric(QUAC_PCA[[pops]]$li$Axis2),
QUAC_df$Pop))
colnames(QUAC_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
QUAC_pc1 <- signif(((QUAC_PCA[[pops]]$eig[1])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
QUAC_pc2 <- signif(((QUAC_PCA[[pops]]$eig[2])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
#plot in ggplot
PCA <- ggplot(QUAC_PCA_df_temp, aes(x = as.numeric(Axis1), y = as.numeric(Axis2), color = Pop)) + geom_point()
##plot PCA
#write pdf file
pdf("PCA.pdf",width = 10, height = 8)
PCA
dev.off()
}
pdf("something_here") {something here}
pdf("something_here") ggplot(QUAC_PCA_df_temp, aes(x = as.numeric(Axis1), y = as.numeric(Axis2), color = Pop)) + geom_point() dev.off()
pdf("something_here") ggplot(QUAC_PCA_df_temp, aes(x = as.numeric(Axis1), y = as.numeric(Axis2), color = Pop)) + geom_point() dev.off()
pdf("something_here.pdf") ggplot(QUAC_PCA_df_temp, aes(x = as.numeric(Axis1), y = as.numeric(Axis2), color = Pop)) + geom_point() dev.off()
plot(QUAC_PCA_df_temp[,1])
#loop to run PCA analysis on different population sets
for(pops in 1:length(QUAC_PCA_gen)){
#comment in if you need to convert .arp files to genepop files
#arp2gen(paste0("QUAC_adegenet_files/Relate_Red/", QUAC_PCA_gen[[pops]]))
#read in genepop files as a genind object
QUAC_gen <- read.genepop(paste0("QUAC_adegenet_files/Relate_Red/",gsub("\\..*","",QUAC_PCA_gen[[pops]]), ".gen"), ncode = 3)
#load in data frames
QUAC_df <- read.csv(paste0("QUAC_data_frames/Relate_Red/", QUAC_PCA_df[[pops]]))
#name rows in the genind object
rownames(QUAC_gen@tab) <- QUAC_df[,1]
#name pops
levels(QUAC_gen@pop) <- unique(QUAC_df$Pop)
#create tab object for genind
QUAC_tab <- tab(QUAC_gen, freq=TRUE, NA.method="mean")
#run PCA
QUAC_PCA[[pops]] <- dudi.pca(QUAC_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
QUAC_PCA_df_temp <- data.frame(cbind(as.numeric(QUAC_PCA[[pops]]$li$Axis1),
as.numeric(QUAC_PCA[[pops]]$li$Axis2),
QUAC_df$Pop))
colnames(QUAC_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
QUAC_pc1 <- signif(((QUAC_PCA[[pops]]$eig[1])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
QUAC_pc2 <- signif(((QUAC_PCA[[pops]]$eig[2])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
#plot in ggplot
PCA <- ggplot(QUAC_PCA_df_temp, aes(x = as.numeric(Axis1), y = as.numeric(Axis2), color = Pop)) + geom_point()
##plot PCA
#write pdf file
pdf("PCA.pdf",width = 10, height = 8)
plot(QUAC_PCA_df_temp$Axis1, QUAC_PCA_df_temp$Axis2)
dev.off()
}
#loop to run PCA analysis on different population sets
for(pops in 1:length(QUAC_PCA_gen)){
#comment in if you need to convert .arp files to genepop files
#arp2gen(paste0("QUAC_adegenet_files/Relate_Red/", QUAC_PCA_gen[[pops]]))
#read in genepop files as a genind object
QUAC_gen <- read.genepop(paste0("QUAC_adegenet_files/Relate_Red/",gsub("\\..*","",QUAC_PCA_gen[[pops]]), ".gen"), ncode = 3)
#load in data frames
QUAC_df <- read.csv(paste0("QUAC_data_frames/Relate_Red/", QUAC_PCA_df[[pops]]))
#name rows in the genind object
rownames(QUAC_gen@tab) <- QUAC_df[,1]
#name pops
levels(QUAC_gen@pop) <- unique(QUAC_df$Pop)
#create tab object for genind
QUAC_tab <- tab(QUAC_gen, freq=TRUE, NA.method="mean")
#run PCA
QUAC_PCA[[pops]] <- dudi.pca(QUAC_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
QUAC_PCA_df_temp <- data.frame(cbind(as.numeric(QUAC_PCA[[pops]]$li$Axis1),
as.numeric(QUAC_PCA[[pops]]$li$Axis2),
QUAC_df$Pop))
colnames(QUAC_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
QUAC_pc1 <- signif(((QUAC_PCA[[pops]]$eig[1])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
QUAC_pc2 <- signif(((QUAC_PCA[[pops]]$eig[2])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
#plot in ggplot
PCA <- ggplot(QUAC_PCA_df_temp, aes(x = as.numeric(Axis1), y = as.numeric(Axis2), color = Pop)) + geom_point()
##plot PCA
#write pdf file
pdf("PCA.pdf",width = 10, height = 8)
plot(QUAC_PCA_df_temp$Axis1, QUAC_PCA_df_temp$Axis2, ylim = c(-2,2), xlim = c(-2,2),
xlab = c("PC1 (",QUAC_pc1, "%)"), ylab = c("PC1 (",QUAC_pc2, "%)"))
dev.off()
}
plot(QUAC_PCA_df_temp$Axis1, QUAC_PCA_df_temp$Axis2, ylim = c(-2,2), xlim = c(-2,2),
xlab = c("PC1 (",QUAC_pc1, "%)"), ylab = c("PC1 (",QUAC_pc2, "%)"))
plot(QUAC_PCA_df_temp$Axis1, QUAC_PCA_df_temp$Axis2, ylim = c(-2,2), xlim = c(-2,2),
xlab = c("PC1 (",QUAC_pc1,"%)"), ylab = c("PC2 (",QUAC_pc2,"%)"))
plot(QUAC_PCA_df_temp$Axis1, QUAC_PCA_df_temp$Axis2, ylim = c(-2,2), xlim = c(-2,2),
xlab = c("PC1(",QUAC_pc1,"%)"), ylab = c("PC2(",QUAC_pc2,"%)"))
plot(QUAC_PCA_df_temp$Axis1, QUAC_PCA_df_temp$Axis2, ylim = c(-2,2), xlim = c(-2,2),
xlab = c("PC1(",QUAC_pc1,"%)"), ylab = c(paste("PC2 (",QUAC_pc2,"%)")))
plot(QUAC_PCA_df_temp$Axis1, QUAC_PCA_df_temp$Axis2, ylim = c(-2,2), xlim = c(-2,2),
xlab = c("PC1(",QUAC_pc1,"%)"), ylab = c(paste0("PC2 (",QUAC_pc2,"%)")))
plot(QUAC_PCA_df_temp$Axis1, QUAC_PCA_df_temp$Axis2, ylim = c(-2,2), xlim = c(-2,2),
xlab = c(paste0("PC1 (",QUAC_pc1,"%)")), ylab = c(paste0("PC2 (",QUAC_pc2,"%)")))
#loop to run PCA analysis on different population sets
for(pops in 1:length(QUAC_PCA_gen)){
#comment in if you need to convert .arp files to genepop files
#arp2gen(paste0("QUAC_adegenet_files/Relate_Red/", QUAC_PCA_gen[[pops]]))
#read in genepop files as a genind object
QUAC_gen <- read.genepop(paste0("QUAC_adegenet_files/Relate_Red/",gsub("\\..*","",QUAC_PCA_gen[[pops]]), ".gen"), ncode = 3)
#load in data frames
QUAC_df <- read.csv(paste0("QUAC_data_frames/Relate_Red/", QUAC_PCA_df[[pops]]))
#name rows in the genind object
rownames(QUAC_gen@tab) <- QUAC_df[,1]
#name pops
levels(QUAC_gen@pop) <- unique(QUAC_df$Pop)
#create tab object for genind
QUAC_tab <- tab(QUAC_gen, freq=TRUE, NA.method="mean")
#run PCA
QUAC_PCA[[pops]] <- dudi.pca(QUAC_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
QUAC_PCA_df_temp <- data.frame(cbind(as.numeric(QUAC_PCA[[pops]]$li$Axis1),
as.numeric(QUAC_PCA[[pops]]$li$Axis2),
QUAC_df$Pop))
colnames(QUAC_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
QUAC_pc1 <- signif(((QUAC_PCA[[pops]]$eig[1])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
QUAC_pc2 <- signif(((QUAC_PCA[[pops]]$eig[2])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
##plot PCA
#write pdf file
pdf("PCA.pdf",width = 10, height = 8)
print(ggplot(QUAC_PCA_df_temp))
dev.off()
}
#loop to run PCA analysis on different population sets
for(pops in 1:length(QUAC_PCA_gen)){
#comment in if you need to convert .arp files to genepop files
#arp2gen(paste0("QUAC_adegenet_files/Relate_Red/", QUAC_PCA_gen[[pops]]))
#read in genepop files as a genind object
QUAC_gen <- read.genepop(paste0("QUAC_adegenet_files/Relate_Red/",gsub("\\..*","",QUAC_PCA_gen[[pops]]), ".gen"), ncode = 3)
#load in data frames
QUAC_df <- read.csv(paste0("QUAC_data_frames/Relate_Red/", QUAC_PCA_df[[pops]]))
#name rows in the genind object
rownames(QUAC_gen@tab) <- QUAC_df[,1]
#name pops
levels(QUAC_gen@pop) <- unique(QUAC_df$Pop)
#create tab object for genind
QUAC_tab <- tab(QUAC_gen, freq=TRUE, NA.method="mean")
#run PCA
QUAC_PCA[[pops]] <- dudi.pca(QUAC_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
QUAC_PCA_df_temp <- data.frame(cbind(as.numeric(QUAC_PCA[[pops]]$li$Axis1),
as.numeric(QUAC_PCA[[pops]]$li$Axis2),
QUAC_df$Pop))
colnames(QUAC_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
QUAC_pc1 <- signif(((QUAC_PCA[[pops]]$eig[1])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
QUAC_pc2 <- signif(((QUAC_PCA[[pops]]$eig[2])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
##plot PCA
#write pdf file
pdf("PCA.pdf",width = 10, height = 8)
print(ggplot(QUAC_PCA_df_temp, aes(Axis1, Axis2, Pop)) + geom_point())
dev.off()
}
#loop to run PCA analysis on different population sets
for(pops in 1:length(QUAC_PCA_gen)){
#comment in if you need to convert .arp files to genepop files
#arp2gen(paste0("QUAC_adegenet_files/Relate_Red/", QUAC_PCA_gen[[pops]]))
#read in genepop files as a genind object
QUAC_gen <- read.genepop(paste0("QUAC_adegenet_files/Relate_Red/",gsub("\\..*","",QUAC_PCA_gen[[pops]]), ".gen"), ncode = 3)
#load in data frames
QUAC_df <- read.csv(paste0("QUAC_data_frames/Relate_Red/", QUAC_PCA_df[[pops]]))
#name rows in the genind object
rownames(QUAC_gen@tab) <- QUAC_df[,1]
#name pops
levels(QUAC_gen@pop) <- unique(QUAC_df$Pop)
#create tab object for genind
QUAC_tab <- tab(QUAC_gen, freq=TRUE, NA.method="mean")
#run PCA
QUAC_PCA[[pops]] <- dudi.pca(QUAC_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
QUAC_PCA_df_temp <- data.frame(cbind(as.numeric(QUAC_PCA[[pops]]$li$Axis1),
as.numeric(QUAC_PCA[[pops]]$li$Axis2),
QUAC_df$Pop))
colnames(QUAC_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
QUAC_pc1 <- signif(((QUAC_PCA[[pops]]$eig[1])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
QUAC_pc2 <- signif(((QUAC_PCA[[pops]]$eig[2])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
##plot PCA
#write pdf file
pdf("PCA.pdf",width = 10, height = 8)
print(ggplot(QUAC_PCA_df_temp, aes(Axis1, Axis2, Pop)) + geom_point() +
scale_x_continuous( limits = c(-2,2)) +
scale_y_continuous(limits = c(-2,2)))
dev.off()
}
dev.off()
ggplot(QUAC_PCA_df_temp, aes(Axis1, Axis2, Pop)) + geom_point() +
scale_x_continuous(limits = c(-2,2)) +
scale_y_continuous(limits = c(-2,2))
ggplot(QUAC_PCA_df_temp, aes(Axis1, Axis2, Pop)) + geom_point() +
scale_x_discrete(limits = c(-2,2)) +
scale_y_discrete(limits = c(-2,2))()
ggplot(QUAC_PCA_df_temp, aes(Axis1, Axis2, Pop)) + geom_point() +
scale_x_discrete(limits = c(-2,2)) +
scale_y_discrete(limits = c(-2,2))
?scale_x_continuous
ggplot(QUAC_PCA_df_temp, aes(Axis1, Axis2, Pop)) + geom_point() +
scale_x_discrete(limits = c(-2,2), n.breaks = 5) +
scale_y_discrete(limits = c(-2,2), n.breaks = 5)
as.numeric(QUAC_PCA_df_temp$Axis1)
ggplot(QUAC_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), Pop)) + geom_point() +
scale_x_discrete(limits = c(-2,2) + scale_y_discrete(limits = c(-2,2))
)
ggplot(QUAC_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), Pop)) + geom_point() +
scale_x_continuous(limits = c(-2,2)) +
scale_y_continuous(limits = c(-2,2))
ggplot(QUAC_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), Pop)) + geom_point() +
scale_x_continuous(limits = c(-2,2)) +
scale_y_continuous(limits = c(-2,2))
#loop to run PCA analysis on different population sets
for(pops in 1:length(QUAC_PCA_gen)){
#comment in if you need to convert .arp files to genepop files
#arp2gen(paste0("QUAC_adegenet_files/Relate_Red/", QUAC_PCA_gen[[pops]]))
#read in genepop files as a genind object
QUAC_gen <- read.genepop(paste0("QUAC_adegenet_files/Relate_Red/",gsub("\\..*","",QUAC_PCA_gen[[pops]]), ".gen"), ncode = 3)
#load in data frames
QUAC_df <- read.csv(paste0("QUAC_data_frames/Relate_Red/", QUAC_PCA_df[[pops]]))
#name rows in the genind object
rownames(QUAC_gen@tab) <- QUAC_df[,1]
#name pops
levels(QUAC_gen@pop) <- unique(QUAC_df$Pop)
#create tab object for genind
QUAC_tab <- tab(QUAC_gen, freq=TRUE, NA.method="mean")
#run PCA
QUAC_PCA[[pops]] <- dudi.pca(QUAC_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
QUAC_PCA_df_temp <- data.frame(cbind(as.numeric(QUAC_PCA[[pops]]$li$Axis1),
as.numeric(QUAC_PCA[[pops]]$li$Axis2),
QUAC_df$Pop))
colnames(QUAC_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
QUAC_pc1 <- signif(((QUAC_PCA[[pops]]$eig[1])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
QUAC_pc2 <- signif(((QUAC_PCA[[pops]]$eig[2])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
##plot PCA
#write pdf file
pdf("PCA.pdf",width = 10, height = 8)
print(ggplot(QUAC_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), Pop)) + geom_point() +
scale_x_continuous(limits = c(-2,2)) +
scale_y_continuous(limits = c(-2,2)) +
xlab(paste0("PC1 (", QUAC_garden_allwildpops_pc1, "%)")) +
ylab(paste0("PC2 (", QUAC_garden_allwildpops_pc2, "%)")) +
+ theme_bw() + stat_ellipse() +
scale_color_manual(values=hcl.colors(n = length(unique(QUAC_PCA_df_temp$Pop)), palette = "viridis")))
dev.off()
}
#loop to run PCA analysis on different population sets
for(pops in 1:length(QUAC_PCA_gen)){
#comment in if you need to convert .arp files to genepop files
#arp2gen(paste0("QUAC_adegenet_files/Relate_Red/", QUAC_PCA_gen[[pops]]))
#read in genepop files as a genind object
QUAC_gen <- read.genepop(paste0("QUAC_adegenet_files/Relate_Red/",gsub("\\..*","",QUAC_PCA_gen[[pops]]), ".gen"), ncode = 3)
#load in data frames
QUAC_df <- read.csv(paste0("QUAC_data_frames/Relate_Red/", QUAC_PCA_df[[pops]]))
#name rows in the genind object
rownames(QUAC_gen@tab) <- QUAC_df[,1]
#name pops
levels(QUAC_gen@pop) <- unique(QUAC_df$Pop)
#create tab object for genind
QUAC_tab <- tab(QUAC_gen, freq=TRUE, NA.method="mean")
#run PCA
QUAC_PCA[[pops]] <- dudi.pca(QUAC_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
QUAC_PCA_df_temp <- data.frame(cbind(as.numeric(QUAC_PCA[[pops]]$li$Axis1),
as.numeric(QUAC_PCA[[pops]]$li$Axis2),
QUAC_df$Pop))
colnames(QUAC_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
QUAC_pc1 <- signif(((QUAC_PCA[[pops]]$eig[1])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
QUAC_pc2 <- signif(((QUAC_PCA[[pops]]$eig[2])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
##plot PCA
#write pdf file
pdf("PCA.pdf",width = 10, height = 8)
print(ggplot(QUAC_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), Pop)) + geom_point() +
scale_x_continuous(limits = c(-2,2)) +
scale_y_continuous(limits = c(-2,2)) +
xlab(paste0("PC1 (", QUAC_pc1, "%)")) +
ylab(paste0("PC2 (", QUAC_pc2, "%)")) +
+ theme_bw() + stat_ellipse() +
scale_color_manual(values=hcl.colors(n = length(unique(QUAC_PCA_df_temp$Pop)), palette = "viridis")))
dev.off()
}
#loop to run PCA analysis on different population sets
for(pops in 1:length(QUAC_PCA_gen)){
#comment in if you need to convert .arp files to genepop files
#arp2gen(paste0("QUAC_adegenet_files/Relate_Red/", QUAC_PCA_gen[[pops]]))
#read in genepop files as a genind object
QUAC_gen <- read.genepop(paste0("QUAC_adegenet_files/Relate_Red/",gsub("\\..*","",QUAC_PCA_gen[[pops]]), ".gen"), ncode = 3)
#load in data frames
QUAC_df <- read.csv(paste0("QUAC_data_frames/Relate_Red/", QUAC_PCA_df[[pops]]))
#name rows in the genind object
rownames(QUAC_gen@tab) <- QUAC_df[,1]
#name pops
levels(QUAC_gen@pop) <- unique(QUAC_df$Pop)
#create tab object for genind
QUAC_tab <- tab(QUAC_gen, freq=TRUE, NA.method="mean")
#run PCA
QUAC_PCA[[pops]] <- dudi.pca(QUAC_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
QUAC_PCA_df_temp <- data.frame(cbind(as.numeric(QUAC_PCA[[pops]]$li$Axis1),
as.numeric(QUAC_PCA[[pops]]$li$Axis2),
QUAC_df$Pop))
colnames(QUAC_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
QUAC_pc1 <- signif(((QUAC_PCA[[pops]]$eig[1])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
QUAC_pc2 <- signif(((QUAC_PCA[[pops]]$eig[2])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
##plot PCA
#write pdf file
pdf("PCA.pdf",width = 10, height = 8)
print(ggplot(QUAC_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), Pop)) + geom_point() +
scale_x_continuous(limits = c(-2,2)) +
scale_y_continuous(limits = c(-2,2)) +
xlab(paste0("PC1 (", QUAC_pc1, "%)")) +
ylab(paste0("PC2 (", QUAC_pc2, "%)")) +
theme_bw() + stat_ellipse() +
scale_color_manual(values=hcl.colors(n = length(unique(QUAC_PCA_df_temp$Pop)), palette = "viridis")))
dev.off()
}
dev.off()
dev.off()
dev.off()
#loop to run PCA analysis on different population sets
for(pops in 1:length(QUAC_PCA_gen)){
#comment in if you need to convert .arp files to genepop files
#arp2gen(paste0("QUAC_adegenet_files/Relate_Red/", QUAC_PCA_gen[[pops]]))
#read in genepop files as a genind object
QUAC_gen <- read.genepop(paste0("QUAC_adegenet_files/Relate_Red/",gsub("\\..*","",QUAC_PCA_gen[[pops]]), ".gen"), ncode = 3)
#load in data frames
QUAC_df <- read.csv(paste0("QUAC_data_frames/Relate_Red/", QUAC_PCA_df[[pops]]))
#name rows in the genind object
rownames(QUAC_gen@tab) <- QUAC_df[,1]
#name pops
levels(QUAC_gen@pop) <- unique(QUAC_df$Pop)
#create tab object for genind
QUAC_tab <- tab(QUAC_gen, freq=TRUE, NA.method="mean")
#run PCA
QUAC_PCA[[pops]] <- dudi.pca(QUAC_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
QUAC_PCA_df_temp <- data.frame(cbind(as.numeric(QUAC_PCA[[pops]]$li$Axis1),
as.numeric(QUAC_PCA[[pops]]$li$Axis2),
QUAC_df$Pop))
colnames(QUAC_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
QUAC_pc1 <- signif(((QUAC_PCA[[pops]]$eig[1])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
QUAC_pc2 <- signif(((QUAC_PCA[[pops]]$eig[2])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
##plot PCA
#write pdf file
pdf(paste0(QUAC_clustering_results, QUAC_gen[[pops]], "_PCA.pdf"),width = 10, height = 8)
print(ggplot(QUAC_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), Pop)) + geom_point() +
scale_x_continuous(limits = c(-2,2)) +
scale_y_continuous(limits = c(-2,2)) +
xlab(paste0("PC1 (", QUAC_pc1, "%)")) +
ylab(paste0("PC2 (", QUAC_pc2, "%)")) +
theme_bw() + stat_ellipse() +
scale_color_manual(values=hcl.colors(n = length(unique(QUAC_PCA_df_temp$Pop)), palette = "viridis")))
dev.off()
}
#loop to run PCA analysis on different population sets
for(pops in 1:length(QUAC_PCA_gen)){
#comment in if you need to convert .arp files to genepop files
#arp2gen(paste0("QUAC_adegenet_files/Relate_Red/", QUAC_PCA_gen[[pops]]))
#read in genepop files as a genind object
QUAC_gen <- read.genepop(paste0("QUAC_adegenet_files/Relate_Red/",gsub("\\..*","",QUAC_PCA_gen[[pops]]), ".gen"), ncode = 3)
#load in data frames
QUAC_df <- read.csv(paste0("QUAC_data_frames/Relate_Red/", QUAC_PCA_df[[pops]]))
#name rows in the genind object
rownames(QUAC_gen@tab) <- QUAC_df[,1]
#name pops
levels(QUAC_gen@pop) <- unique(QUAC_df$Pop)
#create tab object for genind
QUAC_tab <- tab(QUAC_gen, freq=TRUE, NA.method="mean")
#run PCA
QUAC_PCA[[pops]] <- dudi.pca(QUAC_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
QUAC_PCA_df_temp <- data.frame(cbind(as.numeric(QUAC_PCA[[pops]]$li$Axis1),
as.numeric(QUAC_PCA[[pops]]$li$Axis2),
QUAC_df$Pop))
colnames(QUAC_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
QUAC_pc1 <- signif(((QUAC_PCA[[pops]]$eig[1])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
QUAC_pc2 <- signif(((QUAC_PCA[[pops]]$eig[2])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
##plot PCA
#write pdf file
pdf(paste0(QUAC_clustering_results, gsub("\\..*","",QUAC_PCA_gen[[pops]]), "_PCA.pdf"),width = 10, height = 8)
print(ggplot(QUAC_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), Pop)) + geom_point() +
scale_x_continuous(limits = c(-2,2)) +
scale_y_continuous(limits = c(-2,2)) +
xlab(paste0("PC1 (", QUAC_pc1, "%)")) +
ylab(paste0("PC2 (", QUAC_pc2, "%)")) +
theme_bw() + stat_ellipse() +
scale_color_manual(values=hcl.colors(n = length(unique(QUAC_PCA_df_temp$Pop)), palette = "viridis")))
}
dev.off()
dev.off()
dev.off()
#loop to run PCA analysis on different population sets
for(pops in 1:length(QUAC_PCA_gen)){
#comment in if you need to convert .arp files to genepop files
#arp2gen(paste0("QUAC_adegenet_files/Relate_Red/", QUAC_PCA_gen[[pops]]))
#read in genepop files as a genind object
QUAC_gen <- read.genepop(paste0("QUAC_adegenet_files/Relate_Red/",gsub("\\..*","",QUAC_PCA_gen[[pops]]), ".gen"), ncode = 3)
#load in data frames
QUAC_df <- read.csv(paste0("QUAC_data_frames/Relate_Red/", QUAC_PCA_df[[pops]]))
#name rows in the genind object
rownames(QUAC_gen@tab) <- QUAC_df[,1]
#name pops
levels(QUAC_gen@pop) <- unique(QUAC_df$Pop)
#create tab object for genind
QUAC_tab <- tab(QUAC_gen, freq=TRUE, NA.method="mean")
#run PCA
QUAC_PCA[[pops]] <- dudi.pca(QUAC_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
QUAC_PCA_df_temp <- data.frame(cbind(as.numeric(QUAC_PCA[[pops]]$li$Axis1),
as.numeric(QUAC_PCA[[pops]]$li$Axis2),
QUAC_df$Pop))
colnames(QUAC_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
QUAC_pc1 <- signif(((QUAC_PCA[[pops]]$eig[1])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
QUAC_pc2 <- signif(((QUAC_PCA[[pops]]$eig[2])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
##plot PCA
#write pdf file
pdf(paste0(QUAC_clustering_results, gsub("\\..*","",QUAC_PCA_gen[[pops]]), "_PCA.pdf"),width = 10, height = 8)
print(ggplot(QUAC_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), col = Pop)) + geom_point() +
scale_x_continuous(limits = c(-2,2)) +
scale_y_continuous(limits = c(-2,2)) +
xlab(paste0("PC1 (", QUAC_pc1, "%)")) +
ylab(paste0("PC2 (", QUAC_pc2, "%)")) +
theme_bw() + stat_ellipse() +
scale_color_manual(values=hcl.colors(n = length(unique(QUAC_PCA_df_temp$Pop)), palette = "viridis")))
dev.off()
}
dev.off()
#loop to run PCA analysis on different population sets
for(pops in 1:length(QUAC_PCA_gen)){
#comment in if you need to convert .arp files to genepop files
#arp2gen(paste0("QUAC_adegenet_files/Relate_Red/", QUAC_PCA_gen[[pops]]))
#read in genepop files as a genind object
QUAC_gen <- read.genepop(paste0("QUAC_adegenet_files/Relate_Red/",gsub("\\..*","",QUAC_PCA_gen[[pops]]), ".gen"), ncode = 3)
#load in data frames
QUAC_df <- read.csv(paste0("QUAC_data_frames/Relate_Red/", QUAC_PCA_df[[pops]]))
#name rows in the genind object
rownames(QUAC_gen@tab) <- QUAC_df[,1]
#name pops
levels(QUAC_gen@pop) <- unique(QUAC_df$Pop)
#create tab object for genind
QUAC_tab <- tab(QUAC_gen, freq=TRUE, NA.method="mean")
#run PCA
QUAC_PCA[[pops]] <- dudi.pca(QUAC_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
QUAC_PCA_df_temp <- data.frame(cbind(as.numeric(QUAC_PCA[[pops]]$li$Axis1),
as.numeric(QUAC_PCA[[pops]]$li$Axis2),
QUAC_df$Pop))
colnames(QUAC_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
QUAC_pc1 <- signif(((QUAC_PCA[[pops]]$eig[1])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
QUAC_pc2 <- signif(((QUAC_PCA[[pops]]$eig[2])/sum(QUAC_PCA[[pops]]$eig))*100, 3)
##plot PCA
#write pdf file
pdf(paste0(QUAC_clustering_results, gsub("\\..*","",QUAC_PCA_gen[[pops]]), "_PCA.pdf"),width = 10, height = 8)
print(ggplot(QUAC_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), col = Pop)) + geom_point() +
scale_x_continuous(limits = c(-3,3)) +
scale_y_continuous(limits = c(-3,3)) +
xlab(paste0("PC1 (", QUAC_pc1, "%)")) +
ylab(paste0("PC2 (", QUAC_pc2, "%)")) +
theme_bw() + stat_ellipse() +
scale_color_manual(values=hcl.colors(n = length(unique(QUAC_PCA_df_temp$Pop)), palette = "viridis")))
dev.off()
}
