(38000/52)/37.5
((38000/52)/37.5)*1.24
(((38000/52)/37.5)*1.24)*4
library(hierfstat)
hierfstat
?hierfstat
setwd("C:\\Users\\eschumacher\\Documents")
nanodrop_values <- read.csv("nandrop_shz_17_60.csv")
setwd("C:\\Users\\eschumacher\\Documents")
setwd("C:/Users/eschumacher/Documents")
setwd("C:\\Users\\eschumacher\\Documents\\primer_ordering_ZAIN")
setwd("C:\\Users\\eschumacher\\Documents")
read.csv("nanodrop_shz_17_60.csv")
nanodrop_values <- read.csv("nanodrop_shz_17_60.csv")
##set my working directory to my documents folder
setwd("C:\\Users\\eschumacher\\Documents")
##
nanodrop_values <- read.csv("nanodrop_shz_17_60.csv")
?t.test
t.test(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, paired = TRUE)
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop)
##now we run the t-test
t.test(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, paired = TRUE)
##
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop)
##
pdf("badblank_nanodrop.pdf")
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop)
dev.off()
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, ylim = c(-10, 10))
##
pdf("badblank_nanodrop.pdf")
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, ylim = c(-10, 10),
names = c("Before New Blank", "After New Blank"))
##
pdf("badblank_nanodrop.pdf")
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, ylim = c(-10, 10),
names = c("Before New Blank", "After New Blank"))
dev.off()
##
pdf("badblank_nanodrop.pdf")
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, ylim = c(-10, 10),
names = c("Before New Blank", "After New Blank"), title = "260/230 ratio comparisons before and after new blank")
dev.off()
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, ylim = c(-10, 10),
names = c("Before New Blank", "After New Blank"), ylab = c("260/230 Ratios"),
main = c("260/230 ratios before and after new blank"))
##
pdf("badblank_nanodrop.pdf")
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, ylim = c(-10, 10),
names = c("Before New Blank", "After New Blank"), ylab = c("260/230 Ratios"),
main = c("260/230 ratios before and after new blank"))
dev.off()
##
pdf("badblank_nanodrop.pdf")
boxplot(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, ylim = c(-10, 10),
names = c("Before New Blank", "After New Blank"), ylab = c("260/230 Ratios"),
main = c("260/230 ratios before and after new blank"))
dev.off()
##set my working directory to my documents folder
setwd("C:\\Users\\eschumacher\\Documents")
##load in nanodrop values
nanodrop_values <- read.csv("nanodrop_shz_17_60.csv")
##non-parametrc
wilcox.test(nanodrop_values$Old.Nanodrop, nanodrop_values$New.Nanodrop, paired = TRUE, alternative = "two.sided")
sum(134
83.8
48.2
21.2)
sum(134, 83.8, 48.2, 21.2)
library(adegenet)
library(poppr)
library(hierfstat)
library(PopGenReport)
library(pegas)
?pair.ia
library(adegenet)
##
QUAC_div <- read.genepop("C:\\Users\\eschumacher\\Documents\\GitHub\\QUAC_diversity\\QUAC_data_files\\QUAC_genind\\garden_wild\\QUAC_garden_clean.gen", ncode = 3)
QUAC_div
QUAC_div@tab
QUAC_div@loc.fac
QUAC_div
QUAC_div@loc.n.all
summary(QUAC_div)
library(hierfstat)
allelic.richness(QUAC_div)
sum(as.numeric(QUAC_div@loc.n.all))
as.numeric(QUAC_div@loc.n.all)[1]
21/175
length(QUAC_div@loc.n.all)
allelic.richness(QUAC_div)
colMeans(allelic.richness(QUAC_div)$Ar)
library(diveRsity)
library(adegenet)
library(poppr)
library(Demerelate)
#####################################
############ Directories ############
#####################################
QUAC_data_files <- "C:\\Users\\eschumacher\\Documents\\GitHub\\QUAC_diversity\\QUAC_data_files"
QUAC_analysis_results <- "C:\\Users\\eschumacher\\Documents\\GitHub\\QUAC_diversity\\QUAC_analyses\\Results"
setwd(QUAC_data_files)
##now read in genind file
QUAC_allpop_gen <- read.genepop(paste0(QUAC_data_files, "\\QUAC_genind\\quac_allpop.gen"), ncode = 3)
##load files to label population names and indvidual names
QUAC_allpop_df <- read.csv(paste0(QUAC_data_files, "\\QUAC_data_frames\\QUAC_allpop_df.csv"))
##load files to label population names and indvidual names
QUAC_allpop_df <- read.csv(paste0(QUAC_data_files, "\\QUAC_data_frames\\QUAC_allpop.csv"))
##rename individuals in the genind file
rownames(QUAC_allpop_gen@tab) <- QUAC_allpop_df$ID
##rename population names
QUAC_popnames <- unique(QUAC_allpop_df$POP)
levels(QUAC_allpop_gen@pop) <- QUAC_popnames
####run clone check
##convert to clone test
QUAC_geneclone <- as.genclone(QUAC_allpop_gen)
##identify multi-locus genotypes (non-clones)
QUAC_gen_id <- mlg.id(QUAC_geneclone)
##function to pull out all clone lists
QUAC_clone_index <- which(sapply(QUAC_gen_id,function(x) length(x)>1))
##now remove clones from the matrix
QUAC_noclones <- clonecorrect(QUAC_geneclone)
##convert back to genind
QUAC_genind_nocl <- genclone2genind(QUAC_noclones)
QUAC_genind_nocl
##remove individuals with too much missing data
QUAC_genind_nomd <- missingno(QUAC_genind_nocl, type = "geno", cutoff = 0.25, quiet = FALSE, freq = FALSE)
##load files to label population names and indvidual names
QUAC_allpop_df <- read.csv("QUAC_data_frames\\QUAC_allpop.csv")
##now read in genind file
QUAC_allpop_gen <- read.genepop("QUAC_genind\\quac_allpop.gen", ncode = 3)
##load files to label population names and indvidual names
QUAC_allpop_df <- read.csv("QUAC_data_frames\\QUAC_allpop.csv")
##rename individuals in the genind file
rownames(QUAC_allpop_gen@tab) <- QUAC_allpop_df$ID
##rename population names
QUAC_popnames <- unique(QUAC_allpop_df$POP)
levels(QUAC_allpop_gen@pop) <- QUAC_popnames
##load document for relatedness analysis
QUAC_rel_df <- read.csv("QUAC_data_frames\\QUAC_rel_df.csv")
####Relatedness analysis
##run relatedness analysis
QUAC_relatedness_df <- Demerelate(QUAC_rel_df, object = T, value = "loiselle")
##now identify how many individuals have greater than 25% relatedness = half siblings
QUAC_halfsib_names <- names(which(unlist(QUAC_relatedness_df$Empirical_Relatedness) > 0.25))
##then use this to create a document which has all the unique individual numbers for every highly related individuals
QUAC_halfsib_names_cleanfront <- gsub("^.*\\.","", QUAC_halfsib_names)
QUAC_halfsib_names_cleanback <- gsub("^.*\\_","", QUAC_halfsib_names_cleanfront)
QUAC_relate_ind_remove <- unique(QUAC_halfsib_names_cleanback)
##now limit genind by these names
QUAC_relate_red_gen <- QUAC_genind_nomd[!rownames(QUAC_genind_nomd@tab) %in% QUAC_relate_ind_remove,]
length(QUAC_relate_ind_remove)
